{"version":3,"sources":["pages/ListPage.js","components/SuperheroDetail.js","pages/SuperheroDetailPage.js","components/EditSuperheroForm.js","pages/SuperheroEditPage.js","pages/RegistrationPage.js","AuthenticationContext.js","AuthenticationProvider.js","components/LogInOrOut.js","components/AgentOnly.js","App.js","reportWebVitals.js","index.js"],"names":["ListPage","useState","rows","setRows","history","useHistory","useEffect","a","fetch","response","json","data","getSuperheroes","className","map","row","onClick","push","_id","name","nickname","alterego","sidekick","SuperheroDetail","superheroId","superhero","setSuperhero","getSuperhero","SuperheroDetailPage","useParams","to","EditSuperheroForm","onSave","saveError","saveButtonCaption","updatedName","setUpdatedName","updatedNickname","setUpdatedNickname","updatedAlterego","setUpdatedAlterego","updatedSidekick","setUpdatedSidekick","console","log","updatedSuperhero","onInputChange","event","setFunction","target","value","createSuperheroDataInvalid","trim","length","htmlFor","id","onChange","disabled","SuperheroEditPage","setSaveError","method","headers","body","JSON","stringify","putResponse","status","text","errorMessage","undefined","error","RegistrationPage","createResponse","AuthenticationContext","React","createContext","username","isAgent","logIn","logOut","AuthenticationProvider","children","setUsername","setIsAgent","Provider","password","loginOptions","loggedInUser","logintoserver","LogInOrOut","authContext","useContext","AgentOnly","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a181c3b1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n//import SuperheroDetail from '../components/SuperheroDetail'\nimport './ListPage.css';\n\nconst ListPage = () => {\n    const [rows, setRows] = useState([]);\n    //const [selectedSuperheroId, setSelectedSuperheroId]= useState()\n    const history= useHistory()\n\n    useEffect(() => {\n      const getSuperheroes = async () => {\n        // fetch uses the \"proxy\" value set in client/package.json\n        let response = await fetch('/api/superhero');\n        let data = await response.json();\n        setRows(data);\n      };\n      getSuperheroes();\n    }, []);\n  \n\n    return (\n      <div className=\"superhero-table\">\n        <table>\n            <tbody>\n              <tr><th>Name</th><th>Nickname</th><th>Alter Ego</th><th>Sidekick</th></tr>\n              {rows.map((row) => {\n                  return (\n                    <tr key={row.name} onClick={()=> history.push(`/superhero/${row._id}`)}>\n                        <td>{row.name}</td>\n                        <td>{row.nickname}</td>\n                        <td>{row.alterego}</td>\n                        <td>{row.sidekick}</td>\n                    </tr>\n                  )\n              })}                \n            </tbody>\n        </table>\n      </div>\n    )\n  }\n\nexport default ListPage","import { useEffect, useState } from 'react';\n\nconst SuperheroDetail = ({superheroId})=>{\n    const [superhero, setSuperhero]= useState({\n      name:\"\",\n      nickname:\"\",\n      alterego:\"\",\n      sidekick: \"\"\n    })\n    useEffect(()=>{\n      const getSuperhero = async () => {\n        // fetch uses the \"proxy\" value set in client/package.json\n        let response = await fetch('/api/superhero/'+ superheroId);\n        let data = await response.json();\n        setSuperhero(data)\n        \n      };\n      getSuperhero();\n    }, [superheroId])\n  \n    return(\n      <div>\n        <div>Name: {superhero.name}</div>\n        <div>NickName: {superhero.nickname}</div>\n        <div>Alter Ego: {superhero.alterego}</div>\n        <div>Sidekick: {superhero.sidekick}</div>\n      </div>\n    )\n  }\n\n  export default SuperheroDetail","import { useParams } from \"react-router-dom\";\nimport {Link} from 'react-router-dom';\nimport SuperheroDetail from '../components/SuperheroDetail'\n\nconst SuperheroDetailPage = () => {\n   const {superheroId} = useParams()\n   \n\n    return (\n        <div>\n            <h2>Superhero Detail for </h2>\n            <SuperheroDetail superheroId={superheroId} />\n            <Link to={`/superhero/${superheroId}/edit`}>Edit</Link>\n        </div>\n    );\n}\n \nexport default SuperheroDetailPage;","import { useState } from \"react\"\n\nconst EditSuperheroForm = ({name, nickname, sidekick, alterego, onSave, saveError, saveButtonCaption}) => {\n    let [updatedName, setUpdatedName] = useState(name)\n    let [updatedNickname, setUpdatedNickname] = useState(nickname)\n    let [updatedAlterego, setUpdatedAlterego] = useState(alterego)\n    let [updatedSidekick, setUpdatedSidekick] = useState(sidekick)\n    \n    async function onSaveClicked() {\n        console.log('Save has been clicked!')\n        let updatedSuperhero = {\n            name:updatedName, \n            nickname:updatedNickname,\n            alterego:updatedAlterego,\n            sidekick:updatedSidekick\n        }\n        console.log('Saving superhero with', updatedSuperhero )\n        onSave(updatedSuperhero)   \n    }\n\n    const onInputChange = (event, setFunction) => {\n        console.log('Changing input to be ', event.target.value)\n        setFunction(event.target.value);\n    };\n\n    let createSuperheroDataInvalid = !updatedName || (updatedName.trim().length === 0)\n\n    return (\n        <div>\n            <div>\n                <label htmlFor=\"name\">Name</label>\n                <input id=\"name\" value={updatedName} onChange={(event) => onInputChange(event,setUpdatedName)}/>\n            </div>\n            <div>\n                <label htmlFor=\"nickname\">Nickname</label>\n                <input id=\"nickname\" value={updatedNickname} onChange={(event) => onInputChange(event,setUpdatedNickname)}/>\n            </div>\n            <div>\n                <label htmlFor=\"alterego\">Alter ego</label>\n                <input id=\"alterego\" value={updatedAlterego} onChange={(event) => onInputChange(event,setUpdatedAlterego)}/>\n            </div>\n            <div>\n                <label htmlFor=\"sidekick\">Sidekick</label>\n                <input id=\"sidekick\" value={updatedSidekick} onChange={(event) => onInputChange(event,setUpdatedSidekick)}/>\n            </div>\n            <button disabled={ createSuperheroDataInvalid } onClick={ onSaveClicked }>{saveButtonCaption}</button>\n            { saveError && <div>{saveError}</div> }            \n        </div>\n    )\n\n}\n\nexport default EditSuperheroForm;","import { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect} from 'react';\nimport EditSuperheroForm from \"../components/EditSuperheroForm\";\n\nconst SuperheroEditPage = () => {\n    let [superhero, setSuperhero] = useState()\n    let [saveError, setSaveError] = useState()\n    \n    let history = useHistory()\n    const {superheroId} = useParams()\n\n    useEffect(()=>{\n        const getSuperhero = async () => {\n          // fetch uses the \"proxy\" value set in client/package.json\n          let response = await fetch('/api/superhero/'+ superheroId);\n          let data = await response.json();\n          setSuperhero(data) \n        };\n        getSuperhero();\n      }, [superheroId])\n      \n    let onSave = async function(updatedSuperhero){\n        try {\n            let putResponse = await fetch(`/api/superhero/${superheroId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedSuperhero)\n            })\n            // the server didn't like the data for some reason\n            console.log('Response is', putResponse)\n            if (putResponse.status !== 200) {\n                let errorMessage = await putResponse.text()\n                console.log('We had an error.  it was: ', errorMessage)\n                setSaveError(errorMessage)\n            }\n            else {\n                setSaveError(undefined)\n                history.push(`/superhero/${superheroId}`)\n            }\n        }\n        catch (error) {\n            // the server cannot be reached\n            console.error('Fetch failed to reach the server.')\n        }\n    }\n\n    return (\n        <div>\n            <h2>Editing Superhero</h2>\n            {superhero && \n                <EditSuperheroForm \n                onSave={onSave} \n                saveError={saveError} \n                saveButtonCaption=\"Save Superhero\"\n                name={superhero.name}\n                nickname={superhero.nickname}\n                sidekick={superhero.sidekick}\n                alterego={superhero.alterego}\n                />\n            }\n            \n        </div>\n    );\n}\n \nexport default SuperheroEditPage;","import { useState } from \"react\"\nimport { useHistory } from \"react-router\"\nimport EditSuperheroForm from '../components/EditSuperheroForm'\n\nconst RegistrationPage = () => {\n    let [saveError, setSaveError] = useState()\n    let history = useHistory()\n\n    let onSave = async function(updatedSuperhero){\n        try {\n            let createResponse = await fetch('/superhero', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedSuperhero)\n            })\n            // the server didn't like the data for some reason\n            console.log('Create response is', createResponse)\n            if (createResponse.status !== 200) {\n                let errorMessage = await createResponse.text()\n                console.log('We had an error.  it was: ', errorMessage)\n                setSaveError(errorMessage)\n            }\n            else {\n                setSaveError(undefined)\n                history.push('/')\n            }\n        }\n        catch (error) {\n            // the server cannot be reached\n            console.error('Fetch failed to reach the server.')\n        }\n    }\n    \n    return(\n        <EditSuperheroForm \n            onSave={onSave}     \n            saveError={saveError} \n            saveButtonCaption= \"Create Superhero!\"/>\n    )  \n}\n\nexport default RegistrationPage","import React from 'react'\n\nconst AuthenticationContext = React.createContext({\n    username:'',\n    isAgent: false,\n    logIn: (username, isAgent) => {},\n    logOut: () => {}\n})\n    \nexport default AuthenticationContext;","import { useState } from 'react';\nimport AuthenticationContext from './AuthenticationContext';\n\nconst AuthenticationProvider = ({children}) => {\n    let [username, setUsername] = useState()\n    let [isAgent, setIsAgent] = useState(false)\n\n    const logIn = (username, password ) => {\n\n        async function logintoserver(){\n            let loginOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, password })\n            }\n\n            let response = await fetch('api/auth/login', loginOptions)\n            let loggedInUser = await response.json()\n            console.log(`The call to auth returned: ${loggedInUser}`)\n            setUsername(loggedInUser.username)\n            setIsAgent(loggedInUser.isAgent)\n        }\n        logintoserver()\n    }\n\n    const logOut = () => {\n        setUsername(undefined)\n        setIsAgent(false)\n    }\n\n    // let contextValue = {\n    //     username, \n    //     isAgent,\n    //     logIn, \n    //     logOut\n    // }\n    return (\n        <AuthenticationContext.Provider value={{username, isAgent, logIn, logOut}}>\n            {children}\n        </AuthenticationContext.Provider>\n    )\n    \n}\n\nexport default AuthenticationProvider;","import { useContext } from \"react\";\nimport AuthenticationContext from \"../AuthenticationContext\";\n\n//the consumer\nconst LogInOrOut = () => {\n    const authContext = useContext(AuthenticationContext) \n    \n    const isLoggedIn = authContext.username !== undefined //if I'm logged in, username is defined\n\n    \n    return (isLoggedIn)? (\n    <div>\n        <span>Hello {authContext.username}</span>\n        <button onClick={()=>authContext.logOut()}>Logout</button>\n    </div>\n    ) : (\n    <div>\n        <button onClick={()=> authContext.logIn('batman', 'nanananan')}>LogIn</button>\n    </div>\n    )\n\n}\n \nexport default LogInOrOut;","import { useContext } from \"react\";\nimport AuthenticationContext from \"../AuthenticationContext\";\n\nconst AgentOnly = ({children}) => {\n    const authContext = useContext(AuthenticationContext)\n   \n    return (authContext.isAgent)? children : null\n}\n \nexport default AgentOnly;","import './App.css';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport ListPage from './pages/ListPage'\nimport SuperheroDetailPage from './pages/SuperheroDetailPage'\nimport SuperheroEditPage from './pages/SuperheroEditPage'\nimport RegistrationPage from './pages/RegistrationPage'\nimport AuthenticationProvider from './AuthenticationProvider';\nimport LogInOrOut from './components/LogInOrOut';\nimport AgentOnly from './components/AgentOnly';\n\nconst App = () => {\n  return (\n    <AuthenticationProvider>\n      <Router>\n        <div>\n          <div className=\"title-bar\">\n            <h1>Superhero Registry</h1>\n            <AgentOnly>\n              <Link to='/'>List View</Link>\n            </AgentOnly>\n            <Link to='/register'>Register</Link>\n            <LogInOrOut/> \n          </div>\n          <Switch>\n          <Route path=\"/register\">\n              <RegistrationPage />\n            </Route>\n            <Route path=\"/superhero/:superheroId/edit\">\n              <SuperheroEditPage />\n            </Route>\n            <Route path=\"/superhero/:superheroId\">\n              <SuperheroDetailPage />\n            </Route>\n            <Route path=\"/\">\n              <ListPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </AuthenticationProvider>\n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}